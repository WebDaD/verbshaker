{
  "name": "verbshaker",
  "version": "0.1.0",
  "private": true,
  "config": {
    "port":8080,
    "proverbs":"proverbs/",
    "show_docs":false
  },
  "scripts": {
    "binaries":"echo '=> Installing Binaries' && npm install -g bower pm2 less jade html-minifier uglify-js uglifycss imagemin-cli json && echo '=> Installing Binaries OK'",
    "binaries:extended":"echo '=> Installing extended Binaries' && npm install -g mocha standard istanbul markdown-html mochawesome raml2html jsdoc jade-lint jsonlint-cli retire nsp && echo '=> Installing extended Binaries'",

    "configure":"sh configure.sh",

    "lint":"echo '=> Linting Files' && npm run lint:jade && npm run lint:less && npm run lint:js && npm run lint:json && echo '=> Linting Files OK'",
      "lint:jade":"echo -n '==> Linting JADE ...' && jade-lint assets/html/*.jade && echo 'OK'",
      "lint:less":"echo -n '==> Linting LESS ...' && lessc --lint assets/css/*.less && echo 'OK'",
      "lint:js":"echo -n '==> Linting JS ...' && standard \"assets/js/*.js\" \"tests/*.js\" && echo 'OK'",
      "lint:json":"echo -n '==> Linting JSON ...' && jsonlint-cli package.json && echo 'OK'",

    "test":"echo '=> Performing Tests'  && npm run test:code && npm run test:loadtest  && echo '=> Performing Tests OK'",
      "test:code":"echo '==> Mocha' && istanbul cover _mocha -- tests/*.js -R mochawesome && echo 'OK'",
      "test:loadtest":"echo '==> LoadTest' && node tests/loadtest.js && echo 'OK'",

    "doc":"echo '=> Creating Docs' && npm run doc:istanbul && npm run doc:markdown && npm run doc:mocha && npm run doc:raml && npm run doc:jsdoc && echo '=> Creating Docs OK'",
      "doc:istanbul":"echo -n '==> Copying Coverage ...' && rsync -avq coverage/ docs/coverage/ && rm -rf coverage/ && echo 'OK'",
      "doc:markdown":"echo -n '==> Creating HTML ...' && markdown-html docs/README.md -o docs/index.html && markdown-html README.md -o docs/readme.html && echo 'OK'",
      "doc:mocha":"echo -n '==> Copying Testreports ...' && rsync -avq mochawesome-reports/ docs/mochawesome-reports/ && rm -rf mochawesome-reports/ && echo 'OK'",
      "doc:raml":"echo -n '==> Creating API-Doc ...' && raml2html docs/api.raml > docs/api.html && echo 'OK'",
      "doc:jsdoc":"echo -n '==> Creating JSDoc ...' && jsdoc libs/* routes/* tests/* app.js -d docs/jsdoc/ && echo 'OK'",

    "bower":"echo '=> Downloading Bower Assets' && echo '==> Bower install' && bower install --allow-root && echo '=> Downloading Bower Assets OK'",

    "prepare":"echo '=> Preparing Website Assets' && npm run prepare:baseline && npm run prepare:html && npm run prepare:js && npm run prepare:css && npm run prepare:images && npm run prepare:bootstrap && npm run prepare:jquery && npm run prepare:shakejs && npm run prepare:flag-icons && npm run prepare:font-awesome && npm run prepare:glyphicons && npm run prepare:angular && echo '=> Preparing Website Assets OK'",
      "prepare:baseline":"echo -n '==> Preparing Folders ...' && mkdir -p public && mkdir -p tmp && rm -rf public/* &&  rm -rf tmp/* && mkdir -p public/css && mkdir -p public/flags && mkdir -p public/js && mkdir -p public/images && mkdir -p public/fonts && mkdir -p tmp/css && mkdir -p tmp/js && mkdir -p tmp/images && mkdir -p tmp/html && echo 'OK'",
      "prepare:html":"echo -n '==> Preparing HTML ...' && jade assets/html/index.jade -o tmp/html/ > /dev/null && jade assets/html/share.jade -o tmp/html/ > /dev/null && echo 'OK'",
      "prepare:js":"echo -n '==> Preparing JS ...' && cp assets/js/*.js tmp/js/ && echo 'OK'",
      "prepare:css":"echo -n '==> Preparing CSS ...' && lessc assets/css/main.less tmp/css/main.css && echo 'OK'",
      "prepare:images":"echo -n '==> Preparing Images ...' && cp assets/images/* tmp/images/ 2>>/dev/null | true && echo 'OK'",
      "prepare:bootstrap":"echo -n '==> Preparing Bootstrap ...' && cp bower_components/bootstrap/dist/css/bootstrap.min.css tmp/css/bootstrap.min.css && cp bower_components/bootstrap/dist/js/bootstrap.min.js tmp/js/bootstrap.min.js && echo 'OK'",
      "prepare:jquery":"echo -n '==> Preparing jQuery ...' && cp bower_components/jquery/dist/jquery.min.js tmp/js/jquery.min.js && echo 'OK'",
      "prepare:shakejs":"echo -n '==> Preparing shake.js ...' && cp bower_components/shake.js/shake.js tmp/js/shake.js && echo 'OK'",
      "prepare:flag-icons":"echo -n '==> Preparing Flag-Icons ...' && cp bower_components/flag-icon-css/css/flag-icon.min.css tmp/css/flag-icon.min.css && cp -r bower_components/flag-icon-css/flags/* public/flags && echo 'OK'",
      "prepare:font-awesome":"echo -n '==> Preparing Font-Awesome ...' && cp bower_components/font-awesome/css/font-awesome.min.css tmp/css/font-awesome.min.css && cp bower_components/font-awesome/fonts/* public/fonts/ && echo 'OK'",
      "prepare:glyphicons":"echo -n '==> Preparing glyphicons ...' && cp bower_components/bootstrap/fonts/* public/fonts/ && echo 'OK'",
      "prepare:angular":"echo '==> Preparing angular' && cp bower_components/angular/angular.min.js public/js/angular.min.js && npm run prepare:angular:cookies && npm run prepare:angular:colorpicker && npm run prepare:angular:numberpicker && npm run prepare:angular:tooltips && npm run prepare:angular:animate && npm run prepare:angular:socialshare && npm run prepare:angular:bootstrap && echo '==> Preparing angular OK'",
        "prepare:angular:cookies":"echo -n '===> Deploying angular-cookies ...' && cp bower_components/angular-cookies/angular-cookies.min.js tmp/js/angular-cookies.min.js && echo 'OK'",
        "prepare:angular:numberpicker":"echo -n '===> Deploying angular-numberpicker ...' && cp bower_components/angular-number-picker/dist/angular-number-picker.min.js tmp/js/angular-number-picker.min.js && echo 'OK'",
        "prepare:angular:colorpicker":"echo -n '===> Deploying angular-bootstrap-colorpicker ...' && cp bower_components/angular-bootstrap-colorpicker/css/colorpicker.css tmp/css/colorpicker.css && cp bower_components/angular-bootstrap-colorpicker/js/bootstrap-colorpicker-module.js tmp/js/bootstrap-colorpicker-module.js && echo 'OK'",
        "prepare:angular:tooltips":"echo -n '===> Deploying angular-tooltips ...' && cp bower_components/angular-tooltips/dist/angular-tooltips.min.css tmp/css/angular-tooltips.min.css && cp bower_components/angular-tooltips/dist/angular-tooltips.min.js tmp/js/angular-tooltips.min.js && echo 'OK'",
        "prepare:angular:animate":"echo -n '===> Deploying angular-animate ...' && cp bower_components/angular-animate/angular-animate.min.js tmp/js/angular-animate.min.js && echo 'OK'",
        "prepare:angular:socialshare":"echo -n '===> Deploying angular-socialshare ...' && cp bower_components/angularjs-socialshare/dist/angular-socialshare.min.js tmp/js/angular-socialshare.min.js && echo 'OK'",
        "prepare:angular:bootstrap":"echo -n '===> Deploying angular-bootstrap ...' && cp bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js tmp/js/ui-bootstrap-tpls.min.js && echo 'OK'",



    "minify":"echo '=> Minifying Files' && npm run minify:html && npm run minify:js && npm run minify:css && npm run minify:images && echo '=> Minifying Files OK' ",
      "minify:html":"echo -n '==> Minifying HTML ...' && html-minifier --input-dir tmp/html/ --output-dir public/ && echo 'OK'",
      "minify:js":"echo -n '==> Minifying JS ...' && cp tmp/js/*.js public/js/ && echo 'OK'",
      "minify:css":"echo -n '==> Minifying CSS ...' && uglifycss tmp/css/* > public/css/main.min.css && echo 'OK'",
      "minify:images":"echo -n '==> Minifying Images ...' && imagemin tmp/images/* --out-dir=public/images && echo 'OK'",

    "verify": "echo '=> Verifying Deployment Process' && npm run verify:html && npm run verify:js && npm run verify:css && npm run verify:images && npm run verify:server && echo '=> Verifying Deployment Process OK'",
      "verify:html": "echo -n '==> Verifying HTML ...' && test -e public/index.html && test -e public/share.html && echo 'OK'",
      "verify:js": "echo -n '==> Verifying JS ...' && test -e public/js/verbshaker.js && test -e public/js/share.js && test -e public/js/angular.min.js && test -e public/js/bootstrap.min.js && test -e public/js/jquery.min.js && test -e public/js/angular-cookies.min.js && echo 'OK'",
      "verify:css": "echo -n '==> Verifying CSS ...' && test -e public/css/main.min.css && echo 'OK'",
      "verify:images": "echo -n '==> Verifying Images ...' && test -e public/images/android-chrome-192x192.png && test -e public/images/android-chrome-512x512.png && test -e public/images/apple-touch-icon.png && test -e public/images/browserconfig.xml && test -e public/images/favicon-16x16.png && test -e public/images/favicon-32x32.png && test -e public/images/favicon.ico && test -e public/images/manifest.json && test -e public/images/mstile-150x150.png && test -e public/images/safari-pinned-tab.svg && echo 'OK'",
      "verify:server": "echo -n '==> Verifying Server ...' && test -e app.js && test -e libs/proverbs.js && test -e libs/proverbCollection.js && test -e routes/proverbs.js && test -e routes/index.js && echo 'OK'",

    "security": "echo '=> Verifying Security Process' && npm run security:libs && npm run security:nsp && echo '=> Verifying Security Process OK'",
      "security:libs": "echo -n '==> Verifying Libs ...' && retire && echo 'OK'",
      "security:nsp": "echo -n '==> Verifying Vulnerabilities ...' && nsp check && echo 'OK'",

    "deploy":"echo '=> Deploying verbshaker' && npm run binaries && npm run configure && npm install && npm run bower && npm run prepare && npm run minify && echo '<= READY TO START! =>\nTYPE `npm start` to startup the Server'",

    "devbuild":"echo '=> Devbuilding verbshaker' && npm run binaries && npm run binaries:extended && npm run configure && npm install && npm run bower && npm run security && npm run lint && npm run test && npm run docs && npm run prepare && npm run minify && npm run verify && echo '<= READY TO START! =>\nTYPE `npm start` to startup the Server'",

    "start": "pm2 start app.js --name verbshaker",
    "restart": "pm2 restart verbshaker",
    "stop":"pm2 stop verbshaker",

    "copy":"sh publish.sh"
  },
  "dependencies": {
    "express": "*",
    "nice-console": "*",
    "serve-favicon":"*",
    "csv-parse":"*",
    "async":"*",
    "ip":"*",
    "jsonfile":"*",
    "loadtest":"*",
    "superagent":"*",
    "http-status":"*",
    "helmet":"*"
  }
}
