2016-07-05T08:53:36.396Z [ { global: [Circular],
    process: 
     process {
       title: 'node',
       version: 'v6.2.2',
       moduleLoadList: [Object],
       versions: [Object],
       arch: 'x64',
       platform: 'linux',
       release: [Object],
       argv: [Object],
       execArgv: [],
       env: [Object],
       pid: 1106,
       features: [Object],
       _needImmediateCallback: false,
       execPath: '/usr/bin/nodejs',
       debugPort: 5858,
       _startProfilerIdleNotifier: [Function: _startProfilerIdleNotifier],
       _stopProfilerIdleNotifier: [Function: _stopProfilerIdleNotifier],
       _getActiveRequests: [Function: _getActiveRequests],
       _getActiveHandles: [Function: _getActiveHandles],
       reallyExit: [Function: reallyExit],
       abort: [Function: abort],
       chdir: [Function: chdir],
       cwd: [Function: cwd],
       umask: [Function: umask],
       getuid: [Function: getuid],
       geteuid: [Function: geteuid],
       setuid: [Function: setuid],
       seteuid: [Function: seteuid],
       setgid: [Function: setgid],
       setegid: [Function: setegid],
       getgid: [Function: getgid],
       getegid: [Function: getegid],
       getgroups: [Function: getgroups],
       setgroups: [Function: setgroups],
       initgroups: [Function: initgroups],
       _kill: [Function: _kill],
       _debugProcess: [Function: _debugProcess],
       _debugPause: [Function: _debugPause],
       _debugEnd: [Function: _debugEnd],
       hrtime: [Function: hrtime],
       cpuUsage: [Function: cpuUsage],
       dlopen: [Function: dlopen],
       uptime: [Function: uptime],
       memoryUsage: [Function: memoryUsage],
       binding: [Function: binding],
       _linkedBinding: [Function: _linkedBinding],
       _setupDomainUse: [Function: _setupDomainUse],
       _events: [Object],
       _rawDebug: [Function],
       _eventsCount: 4,
       domain: null,
       _maxListeners: undefined,
       _fatalException: [Function],
       _exiting: false,
       assert: [Function],
       config: [Object],
       emitWarning: [Function],
       nextTick: [Function: nextTick],
       _tickCallback: [Function: _tickCallback],
       _tickDomainCallback: [Function: _tickDomainCallback],
       stdout: [Getter],
       stderr: [Getter],
       stdin: [Getter],
       openStdin: [Function],
       exit: [Function],
       kill: [Function],
       mainModule: [Object] },
    Buffer: 
     { [Function: Buffer]
       poolSize: 8192,
       from: [Function],
       alloc: [Function],
       allocUnsafe: [Function],
       allocUnsafeSlow: [Function],
       isBuffer: [Function: isBuffer],
       compare: [Function: compare],
       isEncoding: [Function],
       concat: [Function],
       byteLength: [Function: byteLength] },
    clearImmediate: [Function],
    clearInterval: [Function],
    clearTimeout: [Function],
    setImmediate: [Function],
    setInterval: [Function],
    setTimeout: [Function],
    console: [Getter],
    proverbs: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ],
    language: 'fr',
    getLanguage: [Function: getLanguage],
    getLanguageSync: [Function: getLanguageSync],
    all: [Function: all],
    allSync: [Function: allSync],
    random: [Function: random],
    randomSync: [Function: randomSync] },
  { global: [Circular],
    process: 
     process {
       title: 'node',
       version: 'v6.2.2',
       moduleLoadList: [Object],
       versions: [Object],
       arch: 'x64',
       platform: 'linux',
       release: [Object],
       argv: [Object],
       execArgv: [],
       env: [Object],
       pid: 1106,
       features: [Object],
       _needImmediateCallback: false,
       execPath: '/usr/bin/nodejs',
       debugPort: 5858,
       _startProfilerIdleNotifier: [Function: _startProfilerIdleNotifier],
       _stopProfilerIdleNotifier: [Function: _stopProfilerIdleNotifier],
       _getActiveRequests: [Function: _getActiveRequests],
       _getActiveHandles: [Function: _getActiveHandles],
       reallyExit: [Function: reallyExit],
       abort: [Function: abort],
       chdir: [Function: chdir],
       cwd: [Function: cwd],
       umask: [Function: umask],
       getuid: [Function: getuid],
       geteuid: [Function: geteuid],
       setuid: [Function: setuid],
       seteuid: [Function: seteuid],
       setgid: [Function: setgid],
       setegid: [Function: setegid],
       getgid: [Function: getgid],
       getegid: [Function: getegid],
       getgroups: [Function: getgroups],
       setgroups: [Function: setgroups],
       initgroups: [Function: initgroups],
       _kill: [Function: _kill],
       _debugProcess: [Function: _debugProcess],
       _debugPause: [Function: _debugPause],
       _debugEnd: [Function: _debugEnd],
       hrtime: [Function: hrtime],
       cpuUsage: [Function: cpuUsage],
       dlopen: [Function: dlopen],
       uptime: [Function: uptime],
       memoryUsage: [Function: memoryUsage],
       binding: [Function: binding],
       _linkedBinding: [Function: _linkedBinding],
       _setupDomainUse: [Function: _setupDomainUse],
       _events: [Object],
       _rawDebug: [Function],
       _eventsCount: 4,
       domain: null,
       _maxListeners: undefined,
       _fatalException: [Function],
       _exiting: false,
       assert: [Function],
       config: [Object],
       emitWarning: [Function],
       nextTick: [Function: nextTick],
       _tickCallback: [Function: _tickCallback],
       _tickDomainCallback: [Function: _tickDomainCallback],
       stdout: [Getter],
       stderr: [Getter],
       stdin: [Getter],
       openStdin: [Function],
       exit: [Function],
       kill: [Function],
       mainModule: [Object] },
    Buffer: 
     { [Function: Buffer]
       poolSize: 8192,
       from: [Function],
       alloc: [Function],
       allocUnsafe: [Function],
       allocUnsafeSlow: [Function],
       isBuffer: [Function: isBuffer],
       compare: [Function: compare],
       isEncoding: [Function],
       concat: [Function],
       byteLength: [Function: byteLength] },
    clearImmediate: [Function],
    clearInterval: [Function],
    clearTimeout: [Function],
    setImmediate: [Function],
    setInterval: [Function],
    setTimeout: [Function],
    console: [Getter],
    proverbs: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ],
    language: 'fr',
    getLanguage: [Function: getLanguage],
    getLanguageSync: [Function: getLanguageSync],
    all: [Function: all],
    allSync: [Function: allSync],
    random: [Function: random],
    randomSync: [Function: randomSync] },
  { global: [Circular],
    process: 
     process {
       title: 'node',
       version: 'v6.2.2',
       moduleLoadList: [Object],
       versions: [Object],
       arch: 'x64',
       platform: 'linux',
       release: [Object],
       argv: [Object],
       execArgv: [],
       env: [Object],
       pid: 1106,
       features: [Object],
       _needImmediateCallback: false,
       execPath: '/usr/bin/nodejs',
       debugPort: 5858,
       _startProfilerIdleNotifier: [Function: _startProfilerIdleNotifier],
       _stopProfilerIdleNotifier: [Function: _stopProfilerIdleNotifier],
       _getActiveRequests: [Function: _getActiveRequests],
       _getActiveHandles: [Function: _getActiveHandles],
       reallyExit: [Function: reallyExit],
       abort: [Function: abort],
       chdir: [Function: chdir],
       cwd: [Function: cwd],
       umask: [Function: umask],
       getuid: [Function: getuid],
       geteuid: [Function: geteuid],
       setuid: [Function: setuid],
       seteuid: [Function: seteuid],
       setgid: [Function: setgid],
       setegid: [Function: setegid],
       getgid: [Function: getgid],
       getegid: [Function: getegid],
       getgroups: [Function: getgroups],
       setgroups: [Function: setgroups],
       initgroups: [Function: initgroups],
       _kill: [Function: _kill],
       _debugProcess: [Function: _debugProcess],
       _debugPause: [Function: _debugPause],
       _debugEnd: [Function: _debugEnd],
       hrtime: [Function: hrtime],
       cpuUsage: [Function: cpuUsage],
       dlopen: [Function: dlopen],
       uptime: [Function: uptime],
       memoryUsage: [Function: memoryUsage],
       binding: [Function: binding],
       _linkedBinding: [Function: _linkedBinding],
       _setupDomainUse: [Function: _setupDomainUse],
       _events: [Object],
       _rawDebug: [Function],
       _eventsCount: 4,
       domain: null,
       _maxListeners: undefined,
       _fatalException: [Function],
       _exiting: false,
       assert: [Function],
       config: [Object],
       emitWarning: [Function],
       nextTick: [Function: nextTick],
       _tickCallback: [Function: _tickCallback],
       _tickDomainCallback: [Function: _tickDomainCallback],
       stdout: [Getter],
       stderr: [Getter],
       stdin: [Getter],
       openStdin: [Function],
       exit: [Function],
       kill: [Function],
       mainModule: [Object] },
    Buffer: 
     { [Function: Buffer]
       poolSize: 8192,
       from: [Function],
       alloc: [Function],
       allocUnsafe: [Function],
       allocUnsafeSlow: [Function],
       isBuffer: [Function: isBuffer],
       compare: [Function: compare],
       isEncoding: [Function],
       concat: [Function],
       byteLength: [Function: byteLength] },
    clearImmediate: [Function],
    clearInterval: [Function],
    clearTimeout: [Function],
    setImmediate: [Function],
    setInterval: [Function],
    setTimeout: [Function],
    console: [Getter],
    proverbs: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ],
    language: 'fr',
    getLanguage: [Function: getLanguage],
    getLanguageSync: [Function: getLanguageSync],
    all: [Function: all],
    allSync: [Function: allSync],
    random: [Function: random],
    randomSync: [Function: randomSync] },
  { global: [Circular],
    process: 
     process {
       title: 'node',
       version: 'v6.2.2',
       moduleLoadList: [Object],
       versions: [Object],
       arch: 'x64',
       platform: 'linux',
       release: [Object],
       argv: [Object],
       execArgv: [],
       env: [Object],
       pid: 1106,
       features: [Object],
       _needImmediateCallback: false,
       execPath: '/usr/bin/nodejs',
       debugPort: 5858,
       _startProfilerIdleNotifier: [Function: _startProfilerIdleNotifier],
       _stopProfilerIdleNotifier: [Function: _stopProfilerIdleNotifier],
       _getActiveRequests: [Function: _getActiveRequests],
       _getActiveHandles: [Function: _getActiveHandles],
       reallyExit: [Function: reallyExit],
       abort: [Function: abort],
       chdir: [Function: chdir],
       cwd: [Function: cwd],
       umask: [Function: umask],
       getuid: [Function: getuid],
       geteuid: [Function: geteuid],
       setuid: [Function: setuid],
       seteuid: [Function: seteuid],
       setgid: [Function: setgid],
       setegid: [Function: setegid],
       getgid: [Function: getgid],
       getegid: [Function: getegid],
       getgroups: [Function: getgroups],
       setgroups: [Function: setgroups],
       initgroups: [Function: initgroups],
       _kill: [Function: _kill],
       _debugProcess: [Function: _debugProcess],
       _debugPause: [Function: _debugPause],
       _debugEnd: [Function: _debugEnd],
       hrtime: [Function: hrtime],
       cpuUsage: [Function: cpuUsage],
       dlopen: [Function: dlopen],
       uptime: [Function: uptime],
       memoryUsage: [Function: memoryUsage],
       binding: [Function: binding],
       _linkedBinding: [Function: _linkedBinding],
       _setupDomainUse: [Function: _setupDomainUse],
       _events: [Object],
       _rawDebug: [Function],
       _eventsCount: 4,
       domain: null,
       _maxListeners: undefined,
       _fatalException: [Function],
       _exiting: false,
       assert: [Function],
       config: [Object],
       emitWarning: [Function],
       nextTick: [Function: nextTick],
       _tickCallback: [Function: _tickCallback],
       _tickDomainCallback: [Function: _tickDomainCallback],
       stdout: [Getter],
       stderr: [Getter],
       stdin: [Getter],
       openStdin: [Function],
       exit: [Function],
       kill: [Function],
       mainModule: [Object] },
    Buffer: 
     { [Function: Buffer]
       poolSize: 8192,
       from: [Function],
       alloc: [Function],
       allocUnsafe: [Function],
       allocUnsafeSlow: [Function],
       isBuffer: [Function: isBuffer],
       compare: [Function: compare],
       isEncoding: [Function],
       concat: [Function],
       byteLength: [Function: byteLength] },
    clearImmediate: [Function],
    clearInterval: [Function],
    clearTimeout: [Function],
    setImmediate: [Function],
    setInterval: [Function],
    setTimeout: [Function],
    console: [Getter],
    proverbs: 
     [ [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object],
       [Object] ],
    language: 'fr',
    getLanguage: [Function: getLanguage],
    getLanguageSync: [Function: getLanguageSync],
    all: [Function: all],
    allSync: [Function: allSync],
    random: [Function: random],
    randomSync: [Function: randomSync] } ]
2016-07-05T08:53:36.458Z Startup Complete
2016-07-05T08:53:36.459Z Using Proverbs-Folder proverbs/
2016-07-05T08:53:36.459Z Languages: 
2016-07-05T08:53:36.459Z fr
2016-07-05T08:53:36.459Z fr
2016-07-05T08:53:36.459Z fr
2016-07-05T08:53:36.459Z fr
2016-07-05T08:53:36.459Z verbshaker@0.1.0 running on Port 8080
2016-07-05T08:53:38.375Z Exiting...
